#!/bin/sh

PACKETD_QUEUE_NUM=1818

IPTABLES=${IPTABLES:-iptables}
CHAIN_NAME=untangle-packetd
TABLE_NAME=mangle
TABLE_HOOK=PREROUTING

debug()
{
    echo "[DEBUG:`date`] $*"
}

remove_packetd_iptables_rules()
{
    # remove previous rules to call our chain if they exist
    ${IPTABLES} -t ${TABLE_NAME} -D ${TABLE_HOOK} -j ${CHAIN_NAME} >/dev/null 2>&1

    # remove the connmark local traffic rules
    ${IPTABLES} -t mangle -D INPUT -j CONNMARK --or-mark 0xf0000000
    ${IPTABLES} -t mangle -D OUTPUT -j CONNMARK --or-mark 0xf0000000

    # flush and remove our chain
    ${IPTABLES} -t ${TABLE_NAME} -F ${CHAIN_NAME} >/dev/null 2>&1
    ${IPTABLES} -t ${TABLE_NAME} -X ${CHAIN_NAME} >/dev/null 2>&1
}

insert_packetd_iptables_rules()
{
    # create and flush the chain for our traffic
    ${IPTABLES} -t ${TABLE_NAME} -N ${CHAIN_NAME} >/dev/null 2>&1
    ${IPTABLES} -t ${TABLE_NAME} -F ${CHAIN_NAME}

    # we don't care about traffic to or from loopback addresses
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -s 127.0.0.0/8 -j RETURN
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -d 127.0.0.0/8 -j RETURN

    # don't queue bypassed traffic
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -m connmark --mark 0xf0000000/0xf0000000 -j RETURN -m comment --comment 'Do not queue (bypass) all packets with bypass bit set'

    # all other packets will be sent to the netfilter queue
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -j NFQUEUE --queue-num ${PACKETD_QUEUE_NUM} --queue-bypass
    ${IPTABLES} -t ${TABLE_NAME} -A ${CHAIN_NAME} -j NFQUEUE --queue-num ${PACKETD_QUEUE_NUM} --queue-bypass

    # connmark all local traffic (subsequent packets will not be queued)
    ${IPTABLES} -t mangle -I INPUT -j CONNMARK --or-mark 0xf0000000
    ${IPTABLES} -t mangle -I OUTPUT -j CONNMARK --or-mark 0xf0000000

    # insert rule to send traffic to our capture chain
    ${IPTABLES} -t ${TABLE_NAME} -I ${TABLE_HOOK} -j ${CHAIN_NAME}
}

usage() {
    echo "$0 [options]"
    echo "optional options: "
    echo " -r              (force removal only)"
    echo " -i              (force insert only)"
    echo " -h              (help)"
    echo
}

##### Start of script

OP=""
while getopts "rih" opt; do
  case $opt in
    r) OP="remove";;
    i) OP="insert";;
    h) usage;exit 0;;
    *) usage;exit 0;;
  esac
done


## make sure we are called as root
USERVAL=`id -u`
if test ${USERVAL} -ne 0
then
  printf "\n  ERROR: You must be root to run this script\n\n"
  exit
fi

if [ "$OP" = "remove" ] ; then
    remove_packetd_iptables_rules
    echo "[`date`] The packetd netfilter rules removed."
    exit 0
elif [ "$OP" = "insert" ] ; then
    insert_packetd_iptables_rules
    echo "[`date`] The packetd netfilter rules inserted."
    exit 0
else
    remove_packetd_iptables_rules
    insert_packetd_iptables_rules
    echo "[`date`] The packetd netfilter rules inserted."
fi

